Step 1: Set Up Flask and SQLAlchemy
Install Flask and SQLAlchemy
bash
from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///irctc.db'
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password = db.Column(db.String(120), nullable=False)

class Train(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), nullable=False)
    origin = db.Column(db.String(80), nullable=False)
    destination = db.Column(db.String(80), nullable=False)
    departure_time = db.Column(db.DateTime, nullable=False)
    arrival_time = db.Column(db.DateTime, nullable=False)
    seats_available = db.Column(db.Integer, nullable=False)

class Booking(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    train_id = db.Column(db.Integer, db.ForeignKey('train.id'), nullable=False)
    booking_time = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)
    seat_number = db.Column(db.Integer, nullable=False)

db.create_all()

@app.route('/register', methods=['POST'])
def register():
    data = request.json
    new_user = User(username=data['username'], password=data['password'])
    db.session.add(new_user
    db.session.commit()
    return jsonify({'message': 'User registered successfully!'}), 201

@app.route('/login', methods=['POST'])
def login():
    data = request.json
    user = User.query.filter_by(username=data['username'], password=data['password']).first()
    if user:
        return jsonify({'message': 'Login successful!'})
    else:
        return jsonify({'message': 'Invalid credentials'}), 401

@app.route('/trains', methods=['GET'])
def get_trains():
    trains = Train.query.all()
    result = []
    for train in trains:
        train_data = {
            'id': train.id,
            'name': train.name,
            'origin': train.origin,
            'destination': train.destination,
            'departure_time': train.departure_time,
            'arrival_time': train.arrival_time,
            'seats_available': train.seats_available
        }
        result.append(train_data)
    return jsonify(result)

@app.route('/book', methods=['POST'])
def book_ticket():
    data = request.json
    user_id = data['user_id']
    train_id = data['train_id']
    train = Train.query.filter_by(id=train_id).first()
    if train and train.seats_available > 0:
        booking = Booking(user_id=user_id, train_id=train_id, seat_number=train.seats_available)
        train.seats_available -= 1
        db.session.add(booking)
        db.session.commit()
        return jsonify({'message': 'Booking successful!', 'seat_number': booking.seat_number})
    else:
        return jsonify({'message': 'Booking failed. No seats available.'}), 400

if __name__ == '__main__':
    app.run(debug=True)


curl -X POST http://127.0.0.1:5000/register -H "Content-Type: application/json" -d '{"username":"testuser", "password":"testpass"}'
